
import matrix8x8
import time
# Adapted from http://arduino-er.blogspot.com.au/2014/08/port-ascii-font-to-arduino-88-led-matrix.html

class Text:

    LOOKUP = {}
    LOOKUP['a'] = bytearray((0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00))
    LOOKUP['b'] = bytearray((0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00))
    LOOKUP['c'] = bytearray((0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00))
    LOOKUP['d'] = bytearray((0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00))
    LOOKUP['e'] = bytearray((0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00))
    LOOKUP['f'] = bytearray((0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00))
    LOOKUP['g'] = bytearray((0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F))
    LOOKUP['h'] = bytearray((0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00))
    LOOKUP['i'] = bytearray((0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00))
    LOOKUP['j'] = bytearray((0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E))
    LOOKUP['k'] = bytearray((0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00))
    LOOKUP['l'] = bytearray((0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00))
    LOOKUP['m'] = bytearray((0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00))
    LOOKUP['n'] = bytearray((0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00))
    LOOKUP['o'] = bytearray((0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00))
    LOOKUP['p'] = bytearray((0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F))
    LOOKUP['q'] = bytearray((0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78))
    LOOKUP['r'] = bytearray((0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00))
    LOOKUP['s'] = bytearray((0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00))
    LOOKUP['t'] = bytearray((0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00))
    LOOKUP['u'] = bytearray((0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00))
    LOOKUP['v'] = bytearray((0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00))
    LOOKUP['w'] = bytearray((0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00))
    LOOKUP['x'] = bytearray((0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00))
    LOOKUP['y'] = bytearray((0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F))
    LOOKUP['z'] = bytearray((0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00))
    LOOKUP['1'] = bytearray((0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00))
    LOOKUP['2'] = bytearray((0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00))
    LOOKUP['3'] = bytearray((0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00))
    LOOKUP['4'] = bytearray((0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00))
    LOOKUP['5'] = bytearray((0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00))
    LOOKUP['6'] = bytearray((0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00))
    LOOKUP['7'] = bytearray((0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00))
    LOOKUP['8'] = bytearray((0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00))
    LOOKUP['9'] = bytearray((0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00))
    LOOKUP['0'] = bytearray((0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00))
    LOOKUP[' '] = bytearray((0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))

    EMPTY = bytearray((0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))

    def __init__(self):
        self.m = matrix8x8.Matrix8x8()
        self.m.on()

    def print_char(self, ch, color):
        bm = self.LOOKUP[ch]
        if color == self.m.GREEN:
            first = bm
            second = self.EMPTY
        elif color == self.m.RED:
            first = self.EMPTY
            second = bm
        else:
            first = bm
            second = bm
        self.m.set(first, second)

    def test_print(self):
        for ch in sorted(self.LOOKUP):
            for c in range(3):
                self.print_char(ch, c)
                time.sleep(0.25)
        self.m.clear()

    def print(self, string, color=None, delay=None):
        if delay is None:
            delay = 0.25
        if color is None:
            color = 0
        for ch in string:
            self.print_char(ch, color)
            time.sleep(delay)
            self.m.clear()
            time.sleep(delay)


if __name__ == '__main__':
    t = Text()
    t.print("hello there")

